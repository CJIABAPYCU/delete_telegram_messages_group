from telethon import TelegramClient
import asyncio
import random
from datetime import datetime

#API
API_ID = 'your_api_id'  # https://my.telegram.org/
API_HASH = 'your_api_hash'  
PHONE_NUMBER = 'your_phone_number'  

# –õ–∏–º–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–π –ø–µ—Ä–µ–¥ –ø–∞—É–∑–æ–π
MESSAGE_LIMIT = 150
# –ü–∞—É–∑–∞ –ø–æ—Å–ª–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –ª–∏–º–∏—Ç–∞ (–≤ —Å–µ–∫—É–Ω–¥–∞—Ö)
PAUSE_DURATION = 300  # 5 –º–∏–Ω—É—Ç

async def process_group(client, chat, start_date, end_date):
    me = await client.get_me()
    print(f"üîπ –û–±—Ä–∞–±–æ—Ç–∫–∞ –≥—Ä—É–ø–ø—ã: {chat.title} –∑–∞ –ø–µ—Ä–∏–æ–¥ {start_date.year}")

    # –°—á–µ—Ç—á–∏–∫–∏
    total_messages = 0
    deleted_count = 0

    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –∑–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π –≥–æ–¥
    async for message in client.iter_messages(chat, offset_date=end_date, reverse=True):
        # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å—Ç–∞—Ä—à–µ –Ω–∞—á–∞–ª–∞ –≥–æ–¥–∞, –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –≥–æ–¥—É
        if message.date < start_date:
            break

        total_messages += 1

        # –í—ã–≤–æ–¥–∏–º –ø—Ä–æ–≥—Ä–µ—Å—Å –∫–∞–∂–¥—ã–µ 200 —Å–æ–æ–±—â–µ–Ω–∏–π
        if total_messages % 200 == 0:
            print(f"üîπ –ü—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–æ {total_messages} —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –≥—Ä—É–ø–ø–µ {chat.title} –∑–∞ {start_date.year}")

        # –£–¥–∞–ª—è–µ–º —Å–≤–æ–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
        if message.sender_id == me.id:
            try:
                await message.delete()
                deleted_count += 1
                print(f"‚úÖ –£–¥–∞–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ {message.id} –≤ –≥—Ä—É–ø–ø–µ {chat.title}: {message.text}")
                # –°–ª—É—á–∞–π–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞
                await asyncio.sleep(random.uniform(0.5, 1.5))

                # –ï—Å–ª–∏ –¥–æ—Å—Ç–∏–≥–Ω—É—Ç –ª–∏–º–∏—Ç, –¥–µ–ª–∞–µ–º –ø–∞—É–∑—É
                if deleted_count >= MESSAGE_LIMIT:
                    print(f"üîπ –î–æ—Å—Ç–∏–≥–Ω—É—Ç –ª–∏–º–∏—Ç ({MESSAGE_LIMIT} —Å–æ–æ–±—â–µ–Ω–∏–π). –ü–∞—É–∑–∞ {PAUSE_DURATION} —Å–µ–∫—É–Ω–¥...")
                    await asyncio.sleep(PAUSE_DURATION)
                    deleted_count = 0
            except Exception as e:
                print(f"‚ö† –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è {message.id} –≤ –≥—Ä—É–ø–ø–µ {chat.title}: {e}")

    # –ò—Ç–æ–≥ –ø–æ –≥—Ä—É–ø–ø–µ –∑–∞ –≥–æ–¥
    print(f"üîπ –ì—Ä—É–ø–ø–∞ {chat.title} –∑–∞ {start_date.year} –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞. –ü—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–æ {total_messages} —Å–æ–æ–±—â–µ–Ω–∏–π, —É–¥–∞–ª–µ–Ω–æ {deleted_count}.")

async def delete_my_messages():
    try:
        async with TelegramClient(PHONE_NUMBER, API_ID, API_HASH) as client:
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
            me = await client.get_me()
            name = me.first_name or "–ë–µ–∑ –∏–º–µ–Ω–∏"
            username = me.username or "–ë–µ–∑ username"
            print(f"üîπ –ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –∫–∞–∫: {name} (@{username})")

            # –°–æ–±–∏—Ä–∞–µ–º –≥—Ä—É–ø–ø—ã –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
            groups = []
            async for dialog in client.iter_dialogs():
                if dialog.is_group:
                    groups.append(dialog.entity)

            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –¥–∏–∞–ø–∞–∑–æ–Ω—ã –¥–∞—Ç –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –≥–æ–¥–∞
            current_year = datetime.now().year
            for year in range(current_year, 2016, -1):  # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å —Ç–µ–∫—É—â–µ–≥–æ –≥–æ–¥–∞ –¥–æ 2017
                if year > current_year:  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –±—É–¥—É—â–∏–µ –≥–æ–¥—ã
                    continue

                start_date = datetime(year, 1, 1)
                end_date = datetime(year, 12, 31) if year < current_year else datetime.now()

                print(f"üîπ –ù–∞—á–∏–Ω–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –∑–∞ {year} –≥–æ–¥...")
                for group in groups:
                    await process_group(client, group, start_date, end_date)
    except KeyboardInterrupt:
        print("üîπ –°–∫—Ä–∏–ø—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤—Ä—É—á–Ω—É—é.")
    except Exception as e:
        print(f"‚ö† –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    asyncio.run(delete_my_messages())
